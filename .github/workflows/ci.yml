name: Full CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:

  # -----------------------
  # Frontend Job
  # -----------------------
  frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check Frontend folder exists
        run: |
          if [ ! -d "Frontend" ]; then
            echo "Frontend folder missing!"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Cache node_modules for faster install
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: Frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Frontend Dependencies
        run: |
          cd Frontend
          npm ci

      - name: Lint Frontend
        run: |
          cd Frontend
          npm run lint

      - name: Test Frontend
        run: |
          cd Frontend
          npm test -- --ci --watchAll=false

      - name: Build Frontend
        run: |
          cd Frontend
          npm run build

  # -----------------------
  # Backend Job
  # -----------------------
  backend:
    runs-on: ubuntu-latest
    needs: Frontend  # optional: run backend after frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check Backend folder exists
        run: |
          if [ ! -d "Backend" ]; then
            echo "Backend folder missing!"
            exit 1
          fi

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # Cache Python dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Backend Dependencies
        run: |
          cd Backend
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint Backend
        run: |
          cd Backend
          source venv/bin/activate
          flake8 .

      - name: Test Backend
        run: |
          cd Backend
          source venv/bin/activate
          pytest tests --maxfail=1 --disable-warnings -q

      - name: Build/Check Backend (Optional)
        run: |
          cd Backend
          source venv/bin/activate
          # Optional: check FastAPI app starts
          uvicorn main:app --reload --port 8000 --host 127.0.0.1 --lifespan on &
          sleep 5
          kill $!
